Étape 1 : Faire des modifications sur ton PC
Ouvre le dossier de ton projet localement sur ton ordinateur (celui où tu as cloné le dépôt GitHub).
Ouvre les fichiers (HTML, CSS, JavaScript) que tu souhaites modifier dans ton éditeur de code, comme Visual Studio Code.
Fais les modifications nécessaires.
Étape 2 : Sauvegarder les modifications localement
Ouvre Git Bash dans le dossier de ton projet.

Vérifie l'état de tes modifications en tapant :

bash
Copier le code
git status
Cela te montrera les fichiers modifiés.

Ajoute les fichiers modifiés au staging (prêt pour le commit) en utilisant :

bash
Copier le code
git add .
Le . signifie que tous les fichiers modifiés seront ajoutés. Si tu veux n'ajouter qu'un seul fichier, utilise git add <nom-du-fichier>.

Fais un commit avec un message explicatif :

bash
Copier le code
git commit -m "Ajout d'une nouvelle fonctionnalité" 
Utilise un message qui décrit ce que tu as modifié.

Étape 3 : Pousser les modifications sur GitHub
Envoie tes modifications sur GitHub en tapant :
bash
Copier le code
git push origin master
origin désigne le dépôt distant (GitHub).
master désigne la branche où tu envoies tes modifications (cela peut être main si ton dépôt est configuré différemment).
Étape 4 : Vérifier sur GitHub Pages
Une fois le push terminé, va sur ton dépôt GitHub.
Vérifie que les modifications apparaissent bien sur la page d'accueil de ton dépôt.
Ensuite, va sur ton site GitHub Pages (par exemple : https://paradoxollie.github.io/English-games/) pour voir les modifications en ligne.
Si le site n'est pas encore mis à jour, attends quelques minutes car GitHub Pages peut prendre un peu de temps pour déployer les changements.
Résumé des commandes
Voici un résumé des commandes à utiliser pour chaque modification :

bash
Copier le code
git status                       # Vérifie les modifications
git add .                        # Ajoute toutes les modifications
git commit -m "Message de commit"  # Enregistre les modifications avec un message
git push origin master           # Envoie les modifications sur GitHub
Remarques
Toujours travailler dans ton dossier local : Fais toutes les modifications dans les fichiers sur ton PC, puis utilise Git pour envoyer ces modifications sur GitHub.
Si un conflit survient : Si tu fais des modifications sur GitHub directement ou si quelqu'un d'autre modifie le même dépôt, tu pourrais avoir des conflits lors du git push. Dans ce cas, utilise git pull origin master pour synchroniser ton dépôt local avec GitHub avant de pousser tes modifications.